# oxTrust configuration
applianceInum=%(inumAppliance)s
orgInum=%(inumOrg)s
orgDisplayName=%(orgName)s
orgShortName=%(orgShortName)s
orgSupportEmail=%(admin_email)s

idp.url=https://%(hostname)s
appliance.url=https://%(hostname)s

keystore.path=%(shibJksFn)s
keystore.password=%(shibJksPass)s

person-objectClass-types=inetOrgPerson, gluuPerson, eduPerson, ox-%(inumOrgFN)s
person-objectClass-displayNames=inetOrgPerson, gluuPerson, eduPerson, Custom

svn.configuration-store.root=unused
svn.configuration-store.user=unused
svn.configuration-store.password=unused

person.allow-modification=true
site.update-appliance-status=true
persist-in-svn=false

# Do not modify below this line
baseDN=o\=gluu

schema.add.attribute.attributeTypes=( %%s NAME '%%s' EQUALITY caseIgnoreMatch ORDERING caseIgnoreOrderingMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 USAGE userApplications X-SCHEMA-FILE '100-user.ldif' X-ORIGIN 'gluu' )
schema.add-without-attribute-types.objectClass.objectClasses=( %%s NAME '%%s' SUP top STRUCTURAL MUST objectClass X-SCHEMA-FILE '100-user.ldif' X-ORIGIN 'gluu' )
schema.add-with-attribute-types.objectClass.objectClasses=( %%s NAME '%%s' SUP top STRUCTURAL MUST objectClass MAY ( %%s ) X-SCHEMA-FILE '100-user.ldif' X-ORIGIN 'gluu' )

photo.repository.root-dir=/var/ox/photos
photo.repository.thumb-width=300
photo.repository.thumb-height=300
photo.repository.count-levels=3
photo.repository.count-folders-per-level=20

velocity.log=/opt/tomcat/logs/velocity.log

logo.location=/var/ox/photos

#
# IDP configuration section
#

#gluuSP.shared.attributes=uid, mail, sn, givenName
#gluuSP.metadata=/opt/idp/metadata

shibboleth2.idp.root-dir=/opt/idp
shibboleth2.federation.root-dir=/opt/shibboleth-federation
shibboleth2.sp.conf-dir=/opt/idp/sp


#
# IDP configuration section
#

configGeneration=%(oxTrustConfigGeneration)s

# Configuration related to Idp Server(needed to generate idp configuration and gluuSP metadata)
idp.securityCert=/etc/certs/shibIDP.crt
idp.securityKey=/etc/certs/shibIDP.key
gluuSP.securityCert=/etc/certs/shibIDP.crt
idp.securityKeyPassword=%(encoded_shib_jks_pw)s

# idp LDAP configuration
# TODO - Isn't this in oxTrust-ldap.properties? Should it be removed here?
idp.bindDN=cn=Directory Manager
idp.bindPassword=%(encoded_ox_ldap_pw)s
idp.useSSL=true
idp.ldap.server=localhost:1636

ldifStoreDir=/var/ox/oxtrust/removed


###############################################################################
# SSL support
###############################################################################


#  This option defines keystore to use for SSL download certificate
# verification. It is a good idea to have all truster root CA at this keystore
# Defaults to tomcat SSL keystore (one defined in server.xml)
cacertsLocation=/usr/java/latest/jre/lib/security/cacerts
#  If this option is present it will be used as a passphrase to keystore 
# defined in the cacertsLocation. It is only needed if cacertsLocation is 
# defined and is protected by password. For default jre cacerts behavior (empty
# password) - leace commented.  
#cacertsPassphrase=D+IZwENN451a6PMJri5pLA==

#These options are used for certificates management. 
#certDir is the location of certificates used in configuration files
certDir=/etc/certs/
#certDir is a temporary location for certificates while user performs update procedures
certDirTemp=/etc/certs/temp
#servicesRestartTrigger - file to be deleted to trigger restart of appliance services.
servicesRestartTrigger=/opt/gluu/essential_files/trigger_restart_of_services_delete_me_to_do_so

# set this to "basic" without the quotation to use basic authentication
# or leave it blank to use oxAuth
oxtrust.auth.mode=

###############################################################################
# oxAuth Integration
###############################################################################
oxauth.authorize.url=https://%(hostname)s/oxauth/authorize
oxauth.token.url=https://%(hostname)s/oxauth/seam/resource/restv1/oxauth/token
oxauth.token.validation.url=https://%(hostname)s/oxauth/seam/resource/restv1/oxauth/validate
oxauth.checksession.url=https://%(hostname)s/oxauth/seam/resource/restv1/oxauth/check_session
oxauth.userinfo.url=https://%(hostname)s/oxauth/seam/resource/restv1/oxauth/userinfo
oxauth.logout.url=https://%(hostname)s/oxauth/logout

oxauth.client.id=%(oxauth_client_id)s
oxauth.client.credentials=%(oxauth_client_id)s:%(oxauthClient_encoded_pw)s
oxauth.client.password=%(oxauthClient_encoded_pw)s
oxauth.client.scope=openid+profile+email+user_name

# define redirects
login.redirect.url=https://%(hostname)s/identity/authentication/authcode
logout.redirect.url=https://%(hostname)s/identity/authentication/finishlogout

# this will be used in the client association REST service
# to look up for a client with a specific attribute
client.association.attribute=inum

# oxAuth LDAP custom object class
custom-object-class: ox-%(inumOrgFN)s

baseConfigurationDN=ou=oxtrust-%(inumApplianceFN)s,ou=configuration,o=%(inumOrg)s,o=gluu
createLdapConfigurationEntryIfNotExist=true
